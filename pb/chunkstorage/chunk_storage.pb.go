// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: protos/chunk_storage.proto

package chunkstorage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UploadChunkRequest
type UploadChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// File name
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// Chunk index
	ChunkIndex int32 `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	// Chunk bytes
	ChunkData []byte `protobuf:"bytes,3,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`
}

func (x *UploadChunkRequest) Reset() {
	*x = UploadChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadChunkRequest) ProtoMessage() {}

func (x *UploadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadChunkRequest.ProtoReflect.Descriptor instead.
func (*UploadChunkRequest) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{0}
}

func (x *UploadChunkRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadChunkRequest) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *UploadChunkRequest) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

// UploadChunkResponse
type UploadChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadChunkResponse) Reset() {
	*x = UploadChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadChunkResponse) ProtoMessage() {}

func (x *UploadChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadChunkResponse.ProtoReflect.Descriptor instead.
func (*UploadChunkResponse) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{1}
}

// DownloadChunkRequest
type DownloadChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// File name
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// Chunk index
	ChunkIndex int32 `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
}

func (x *DownloadChunkRequest) Reset() {
	*x = DownloadChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadChunkRequest) ProtoMessage() {}

func (x *DownloadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadChunkRequest.ProtoReflect.Descriptor instead.
func (*DownloadChunkRequest) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadChunkRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DownloadChunkRequest) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

// DownloadChunkResponse
type DownloadChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chunk bytes
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DownloadChunkResponse) Reset() {
	*x = DownloadChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadChunkResponse) ProtoMessage() {}

func (x *DownloadChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadChunkResponse.ProtoReflect.Descriptor instead.
func (*DownloadChunkResponse) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadChunkResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// UploadChunkRequest
type ServerStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerStatsRequest) Reset() {
	*x = ServerStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatsRequest) ProtoMessage() {}

func (x *ServerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatsRequest.ProtoReflect.Descriptor instead.
func (*ServerStatsRequest) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{4}
}

// DownloadChunkResponse
type ServerStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Storage total disc space
	DiscTotal uint64 `protobuf:"varint,1,opt,name=disc_total,json=discTotal,proto3" json:"disc_total,omitempty"`
	// Storage free disc space
	DiscUsed uint64 `protobuf:"varint,2,opt,name=disc_used,json=discUsed,proto3" json:"disc_used,omitempty"`
	// Storage free disc space
	DiscAvail uint64 `protobuf:"varint,3,opt,name=disc_avail,json=discAvail,proto3" json:"disc_avail,omitempty"`
}

func (x *ServerStatsResponse) Reset() {
	*x = ServerStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatsResponse) ProtoMessage() {}

func (x *ServerStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatsResponse.ProtoReflect.Descriptor instead.
func (*ServerStatsResponse) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{5}
}

func (x *ServerStatsResponse) GetDiscTotal() uint64 {
	if x != nil {
		return x.DiscTotal
	}
	return 0
}

func (x *ServerStatsResponse) GetDiscUsed() uint64 {
	if x != nil {
		return x.DiscUsed
	}
	return 0
}

func (x *ServerStatsResponse) GetDiscAvail() uint64 {
	if x != nil {
		return x.DiscAvail
	}
	return 0
}

// DeleteChunkRequest
type DeleteChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// File name
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// Chunk index
	ChunkIndex int32 `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
}

func (x *DeleteChunkRequest) Reset() {
	*x = DeleteChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkRequest) ProtoMessage() {}

func (x *DeleteChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkRequest.ProtoReflect.Descriptor instead.
func (*DeleteChunkRequest) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteChunkRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DeleteChunkRequest) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

// DeleteChunkResponse
type DeleteChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteChunkResponse) Reset() {
	*x = DeleteChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_chunk_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkResponse) ProtoMessage() {}

func (x *DeleteChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_chunk_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkResponse.ProtoReflect.Descriptor instead.
func (*DeleteChunkResponse) Descriptor() ([]byte, []int) {
	return file_protos_chunk_storage_proto_rawDescGZIP(), []int{7}
}

var File_protos_chunk_storage_proto protoreflect.FileDescriptor

var file_protos_chunk_storage_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x12, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0x15, 0x0a,
	0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x70, 0x0a,
	0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x22,
	0x52, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe8, 0x02, 0x0a, 0x0c, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x12, 0x5a, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x52, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x20, 0x2e, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x20, 0x2e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_chunk_storage_proto_rawDescOnce sync.Once
	file_protos_chunk_storage_proto_rawDescData = file_protos_chunk_storage_proto_rawDesc
)

func file_protos_chunk_storage_proto_rawDescGZIP() []byte {
	file_protos_chunk_storage_proto_rawDescOnce.Do(func() {
		file_protos_chunk_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_chunk_storage_proto_rawDescData)
	})
	return file_protos_chunk_storage_proto_rawDescData
}

var file_protos_chunk_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_chunk_storage_proto_goTypes = []any{
	(*UploadChunkRequest)(nil),    // 0: chunkstorage.UploadChunkRequest
	(*UploadChunkResponse)(nil),   // 1: chunkstorage.UploadChunkResponse
	(*DownloadChunkRequest)(nil),  // 2: chunkstorage.DownloadChunkRequest
	(*DownloadChunkResponse)(nil), // 3: chunkstorage.DownloadChunkResponse
	(*ServerStatsRequest)(nil),    // 4: chunkstorage.ServerStatsRequest
	(*ServerStatsResponse)(nil),   // 5: chunkstorage.ServerStatsResponse
	(*DeleteChunkRequest)(nil),    // 6: chunkstorage.DeleteChunkRequest
	(*DeleteChunkResponse)(nil),   // 7: chunkstorage.DeleteChunkResponse
}
var file_protos_chunk_storage_proto_depIdxs = []int32{
	0, // 0: chunkstorage.ChunkStorage.UploadChunk:input_type -> chunkstorage.UploadChunkRequest
	2, // 1: chunkstorage.ChunkStorage.DownloadChunk:input_type -> chunkstorage.DownloadChunkRequest
	6, // 2: chunkstorage.ChunkStorage.DeleteChunk:input_type -> chunkstorage.DeleteChunkRequest
	4, // 3: chunkstorage.ChunkStorage.ServerStats:input_type -> chunkstorage.ServerStatsRequest
	1, // 4: chunkstorage.ChunkStorage.UploadChunk:output_type -> chunkstorage.UploadChunkResponse
	3, // 5: chunkstorage.ChunkStorage.DownloadChunk:output_type -> chunkstorage.DownloadChunkResponse
	7, // 6: chunkstorage.ChunkStorage.DeleteChunk:output_type -> chunkstorage.DeleteChunkResponse
	5, // 7: chunkstorage.ChunkStorage.ServerStats:output_type -> chunkstorage.ServerStatsResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_chunk_storage_proto_init() }
func file_protos_chunk_storage_proto_init() {
	if File_protos_chunk_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_chunk_storage_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UploadChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_chunk_storage_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UploadChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_chunk_storage_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_chunk_storage_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_chunk_storage_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ServerStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_chunk_storage_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ServerStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_chunk_storage_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_chunk_storage_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_chunk_storage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_chunk_storage_proto_goTypes,
		DependencyIndexes: file_protos_chunk_storage_proto_depIdxs,
		MessageInfos:      file_protos_chunk_storage_proto_msgTypes,
	}.Build()
	File_protos_chunk_storage_proto = out.File
	file_protos_chunk_storage_proto_rawDesc = nil
	file_protos_chunk_storage_proto_goTypes = nil
	file_protos_chunk_storage_proto_depIdxs = nil
}
